Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NAME EQUALS expression
Rule 2     statement -> expression
Rule 3     expression -> expression PLUS expression
Rule 4     expression -> expression MINUS expression
Rule 5     expression -> expression TIMES expression
Rule 6     expression -> expression DIVIDE expression
Rule 7     expression -> MINUS expression
Rule 8     statement -> MIN expression
Rule 9     statement -> MIN expression COMMA expression
Rule 10    statement -> MIN expression COMMA expression COMMA expression
Rule 11    statement -> SUBJECT_TO expression EQUALITYTOKEN expression
Rule 12    statement -> SOLVE NAME NAME
Rule 13    expression -> LPAREN expression RPAREN
Rule 14    expression -> NUMBER
Rule 15    expression -> NAME

Terminals, with rules where they appear

COMMA                : 9 10 10
DIVIDE               : 6
EQUALITYTOKEN        : 11
EQUALS               : 1
LPAREN               : 13
MIN                  : 8 9 10
MINUS                : 4 7
NAME                 : 1 12 12 15
NUMBER               : 14
PLUS                 : 3
RPAREN               : 13
SOLVE                : 12
SUBJECT_TO           : 11
TIMES                : 5
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 3 4 4 5 5 6 6 7 8 9 9 10 10 10 11 11 13
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NAME EQUALS expression
    (2) statement -> . expression
    (8) statement -> . MIN expression
    (9) statement -> . MIN expression COMMA expression
    (10) statement -> . MIN expression COMMA expression COMMA expression
    (11) statement -> . SUBJECT_TO expression EQUALITYTOKEN expression
    (12) statement -> . SOLVE NAME NAME
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    NAME            shift and go to state 2
    MIN             shift and go to state 4
    SUBJECT_TO      shift and go to state 5
    SOLVE           shift and go to state 6
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9

    statement                      shift and go to state 1
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> NAME . EQUALS expression
    (15) expression -> NAME .

    EQUALS          shift and go to state 10
    PLUS            reduce using rule 15 (expression -> NAME .)
    MINUS           reduce using rule 15 (expression -> NAME .)
    TIMES           reduce using rule 15 (expression -> NAME .)
    DIVIDE          reduce using rule 15 (expression -> NAME .)
    $end            reduce using rule 15 (expression -> NAME .)


state 3

    (2) statement -> expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 2 (statement -> expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 4

    (8) statement -> MIN . expression
    (9) statement -> MIN . expression COMMA expression
    (10) statement -> MIN . expression COMMA expression COMMA expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 15

state 5

    (11) statement -> SUBJECT_TO . expression EQUALITYTOKEN expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 17

state 6

    (12) statement -> SOLVE . NAME NAME

    NAME            shift and go to state 18


state 7

    (7) expression -> MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 19

state 8

    (13) expression -> LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 20

state 9

    (14) expression -> NUMBER .

    PLUS            reduce using rule 14 (expression -> NUMBER .)
    MINUS           reduce using rule 14 (expression -> NUMBER .)
    TIMES           reduce using rule 14 (expression -> NUMBER .)
    DIVIDE          reduce using rule 14 (expression -> NUMBER .)
    $end            reduce using rule 14 (expression -> NUMBER .)
    COMMA           reduce using rule 14 (expression -> NUMBER .)
    EQUALITYTOKEN   reduce using rule 14 (expression -> NUMBER .)
    RPAREN          reduce using rule 14 (expression -> NUMBER .)


state 10

    (1) statement -> NAME EQUALS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 21

state 11

    (3) expression -> expression PLUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 22

state 12

    (4) expression -> expression MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 23

state 13

    (5) expression -> expression TIMES . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 24

state 14

    (6) expression -> expression DIVIDE . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 25

state 15

    (8) statement -> MIN expression .
    (9) statement -> MIN expression . COMMA expression
    (10) statement -> MIN expression . COMMA expression COMMA expression
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 8 (statement -> MIN expression .)
    COMMA           shift and go to state 26
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 16

    (15) expression -> NAME .

    COMMA           reduce using rule 15 (expression -> NAME .)
    PLUS            reduce using rule 15 (expression -> NAME .)
    MINUS           reduce using rule 15 (expression -> NAME .)
    TIMES           reduce using rule 15 (expression -> NAME .)
    DIVIDE          reduce using rule 15 (expression -> NAME .)
    $end            reduce using rule 15 (expression -> NAME .)
    EQUALITYTOKEN   reduce using rule 15 (expression -> NAME .)
    RPAREN          reduce using rule 15 (expression -> NAME .)


state 17

    (11) statement -> SUBJECT_TO expression . EQUALITYTOKEN expression
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    EQUALITYTOKEN   shift and go to state 27
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 18

    (12) statement -> SOLVE NAME . NAME

    NAME            shift and go to state 28


state 19

    (7) expression -> MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 7 (expression -> MINUS expression .)
    MINUS           reduce using rule 7 (expression -> MINUS expression .)
    TIMES           reduce using rule 7 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 7 (expression -> MINUS expression .)
    $end            reduce using rule 7 (expression -> MINUS expression .)
    COMMA           reduce using rule 7 (expression -> MINUS expression .)
    EQUALITYTOKEN   reduce using rule 7 (expression -> MINUS expression .)
    RPAREN          reduce using rule 7 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]


state 20

    (13) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 29
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 21

    (1) statement -> NAME EQUALS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 1 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 22

    (3) expression -> expression PLUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 3 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 3 (expression -> expression PLUS expression .)
    $end            reduce using rule 3 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 3 (expression -> expression PLUS expression .)
    EQUALITYTOKEN   reduce using rule 3 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14

  ! TIMES           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]


state 23

    (4) expression -> expression MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 4 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 4 (expression -> expression MINUS expression .)
    $end            reduce using rule 4 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 4 (expression -> expression MINUS expression .)
    EQUALITYTOKEN   reduce using rule 4 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14

  ! TIMES           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]


state 24

    (5) expression -> expression TIMES expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 5 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 5 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 5 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 5 (expression -> expression TIMES expression .)
    $end            reduce using rule 5 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 5 (expression -> expression TIMES expression .)
    EQUALITYTOKEN   reduce using rule 5 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 5 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]


state 25

    (6) expression -> expression DIVIDE expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 6 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 6 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 6 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 6 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 6 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 6 (expression -> expression DIVIDE expression .)
    EQUALITYTOKEN   reduce using rule 6 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 6 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]


state 26

    (9) statement -> MIN expression COMMA . expression
    (10) statement -> MIN expression COMMA . expression COMMA expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 30

state 27

    (11) statement -> SUBJECT_TO expression EQUALITYTOKEN . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 31

state 28

    (12) statement -> SOLVE NAME NAME .

    $end            reduce using rule 12 (statement -> SOLVE NAME NAME .)


state 29

    (13) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    EQUALITYTOKEN   reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 13 (expression -> LPAREN expression RPAREN .)


state 30

    (9) statement -> MIN expression COMMA expression .
    (10) statement -> MIN expression COMMA expression . COMMA expression
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 9 (statement -> MIN expression COMMA expression .)
    COMMA           shift and go to state 32
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 31

    (11) statement -> SUBJECT_TO expression EQUALITYTOKEN expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 11 (statement -> SUBJECT_TO expression EQUALITYTOKEN expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 32

    (10) statement -> MIN expression COMMA expression COMMA . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    NAME            shift and go to state 16

    expression                     shift and go to state 33

state 33

    (10) statement -> MIN expression COMMA expression COMMA expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 10 (statement -> MIN expression COMMA expression COMMA expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14

