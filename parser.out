Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NAME EQUALS expression
Rule 2     statement -> expression
Rule 3     expression -> expression PLUS expression
Rule 4     expression -> expression MINUS expression
Rule 5     expression -> expression TIMES expression
Rule 6     expression -> expression DIVIDE expression
Rule 7     expression -> MINUS expression
Rule 8     statement -> MIN expression
Rule 9     statement -> MIN expression COMMA expression
Rule 10    statement -> MIN expression COMMA expression COMMA expression
Rule 11    statement -> SUBJECT_TO expression EQUALITYTOKEN expression
Rule 12    statement -> RUN_ON expression
Rule 13    statement -> RUN_ON expression COMMA expression
Rule 14    statement -> RUN_ON expression COMMA expression COMMA expression
Rule 15    statement -> SOLVE NAME NAME
Rule 16    expression -> LPAREN expression RPAREN
Rule 17    expression -> NUMBER
Rule 18    expression -> NAME

Terminals, with rules where they appear

COMMA                : 9 10 10 13 14 14
COMMENT              : 
DIVIDE               : 6
EQUALITYTOKEN        : 11
EQUALS               : 1
LPAREN               : 16
MIN                  : 8 9 10
MINUS                : 4 7
NAME                 : 1 15 15 18
NUMBER               : 17
PLUS                 : 3
RPAREN               : 16
RUN_ON               : 12 13 14
SOLVE                : 15
SUBJECT_TO           : 11
TIMES                : 5
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 3 4 4 5 5 6 6 7 8 9 9 10 10 10 11 11 12 13 13 14 14 14 16
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NAME EQUALS expression
    (2) statement -> . expression
    (8) statement -> . MIN expression
    (9) statement -> . MIN expression COMMA expression
    (10) statement -> . MIN expression COMMA expression COMMA expression
    (11) statement -> . SUBJECT_TO expression EQUALITYTOKEN expression
    (12) statement -> . RUN_ON expression
    (13) statement -> . RUN_ON expression COMMA expression
    (14) statement -> . RUN_ON expression COMMA expression COMMA expression
    (15) statement -> . SOLVE NAME NAME
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    NAME            shift and go to state 2
    MIN             shift and go to state 4
    SUBJECT_TO      shift and go to state 5
    RUN_ON          shift and go to state 6
    SOLVE           shift and go to state 7
    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10

    statement                      shift and go to state 1
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> NAME . EQUALS expression
    (18) expression -> NAME .

    EQUALS          shift and go to state 11
    PLUS            reduce using rule 18 (expression -> NAME .)
    MINUS           reduce using rule 18 (expression -> NAME .)
    TIMES           reduce using rule 18 (expression -> NAME .)
    DIVIDE          reduce using rule 18 (expression -> NAME .)
    $end            reduce using rule 18 (expression -> NAME .)


state 3

    (2) statement -> expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 2 (statement -> expression .)
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15


state 4

    (8) statement -> MIN . expression
    (9) statement -> MIN . expression COMMA expression
    (10) statement -> MIN . expression COMMA expression COMMA expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 16

state 5

    (11) statement -> SUBJECT_TO . expression EQUALITYTOKEN expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 18

state 6

    (12) statement -> RUN_ON . expression
    (13) statement -> RUN_ON . expression COMMA expression
    (14) statement -> RUN_ON . expression COMMA expression COMMA expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 19

state 7

    (15) statement -> SOLVE . NAME NAME

    NAME            shift and go to state 20


state 8

    (7) expression -> MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 21

state 9

    (16) expression -> LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 22

state 10

    (17) expression -> NUMBER .

    PLUS            reduce using rule 17 (expression -> NUMBER .)
    MINUS           reduce using rule 17 (expression -> NUMBER .)
    TIMES           reduce using rule 17 (expression -> NUMBER .)
    DIVIDE          reduce using rule 17 (expression -> NUMBER .)
    $end            reduce using rule 17 (expression -> NUMBER .)
    COMMA           reduce using rule 17 (expression -> NUMBER .)
    EQUALITYTOKEN   reduce using rule 17 (expression -> NUMBER .)
    RPAREN          reduce using rule 17 (expression -> NUMBER .)


state 11

    (1) statement -> NAME EQUALS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 23

state 12

    (3) expression -> expression PLUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 24

state 13

    (4) expression -> expression MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 25

state 14

    (5) expression -> expression TIMES . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 26

state 15

    (6) expression -> expression DIVIDE . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 27

state 16

    (8) statement -> MIN expression .
    (9) statement -> MIN expression . COMMA expression
    (10) statement -> MIN expression . COMMA expression COMMA expression
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 8 (statement -> MIN expression .)
    COMMA           shift and go to state 28
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15


state 17

    (18) expression -> NAME .

    COMMA           reduce using rule 18 (expression -> NAME .)
    PLUS            reduce using rule 18 (expression -> NAME .)
    MINUS           reduce using rule 18 (expression -> NAME .)
    TIMES           reduce using rule 18 (expression -> NAME .)
    DIVIDE          reduce using rule 18 (expression -> NAME .)
    $end            reduce using rule 18 (expression -> NAME .)
    EQUALITYTOKEN   reduce using rule 18 (expression -> NAME .)
    RPAREN          reduce using rule 18 (expression -> NAME .)


state 18

    (11) statement -> SUBJECT_TO expression . EQUALITYTOKEN expression
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    EQUALITYTOKEN   shift and go to state 29
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15


state 19

    (12) statement -> RUN_ON expression .
    (13) statement -> RUN_ON expression . COMMA expression
    (14) statement -> RUN_ON expression . COMMA expression COMMA expression
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 12 (statement -> RUN_ON expression .)
    COMMA           shift and go to state 30
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15


state 20

    (15) statement -> SOLVE NAME . NAME

    NAME            shift and go to state 31


state 21

    (7) expression -> MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 7 (expression -> MINUS expression .)
    MINUS           reduce using rule 7 (expression -> MINUS expression .)
    TIMES           reduce using rule 7 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 7 (expression -> MINUS expression .)
    $end            reduce using rule 7 (expression -> MINUS expression .)
    COMMA           reduce using rule 7 (expression -> MINUS expression .)
    EQUALITYTOKEN   reduce using rule 7 (expression -> MINUS expression .)
    RPAREN          reduce using rule 7 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 13 ]
  ! TIMES           [ shift and go to state 14 ]
  ! DIVIDE          [ shift and go to state 15 ]


state 22

    (16) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 32
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15


state 23

    (1) statement -> NAME EQUALS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 1 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15


state 24

    (3) expression -> expression PLUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 3 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 3 (expression -> expression PLUS expression .)
    $end            reduce using rule 3 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 3 (expression -> expression PLUS expression .)
    EQUALITYTOKEN   reduce using rule 3 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15

  ! TIMES           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 13 ]


state 25

    (4) expression -> expression MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 4 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 4 (expression -> expression MINUS expression .)
    $end            reduce using rule 4 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 4 (expression -> expression MINUS expression .)
    EQUALITYTOKEN   reduce using rule 4 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15

  ! TIMES           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 13 ]


state 26

    (5) expression -> expression TIMES expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 5 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 5 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 5 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 5 (expression -> expression TIMES expression .)
    $end            reduce using rule 5 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 5 (expression -> expression TIMES expression .)
    EQUALITYTOKEN   reduce using rule 5 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 5 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 13 ]
  ! TIMES           [ shift and go to state 14 ]
  ! DIVIDE          [ shift and go to state 15 ]


state 27

    (6) expression -> expression DIVIDE expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 6 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 6 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 6 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 6 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 6 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 6 (expression -> expression DIVIDE expression .)
    EQUALITYTOKEN   reduce using rule 6 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 6 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 13 ]
  ! TIMES           [ shift and go to state 14 ]
  ! DIVIDE          [ shift and go to state 15 ]


state 28

    (9) statement -> MIN expression COMMA . expression
    (10) statement -> MIN expression COMMA . expression COMMA expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 33

state 29

    (11) statement -> SUBJECT_TO expression EQUALITYTOKEN . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 34

state 30

    (13) statement -> RUN_ON expression COMMA . expression
    (14) statement -> RUN_ON expression COMMA . expression COMMA expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 35

state 31

    (15) statement -> SOLVE NAME NAME .

    $end            reduce using rule 15 (statement -> SOLVE NAME NAME .)


state 32

    (16) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    EQUALITYTOKEN   reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 16 (expression -> LPAREN expression RPAREN .)


state 33

    (9) statement -> MIN expression COMMA expression .
    (10) statement -> MIN expression COMMA expression . COMMA expression
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 9 (statement -> MIN expression COMMA expression .)
    COMMA           shift and go to state 36
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15


state 34

    (11) statement -> SUBJECT_TO expression EQUALITYTOKEN expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 11 (statement -> SUBJECT_TO expression EQUALITYTOKEN expression .)
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15


state 35

    (13) statement -> RUN_ON expression COMMA expression .
    (14) statement -> RUN_ON expression COMMA expression . COMMA expression
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 13 (statement -> RUN_ON expression COMMA expression .)
    COMMA           shift and go to state 37
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15


state 36

    (10) statement -> MIN expression COMMA expression COMMA . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 38

state 37

    (14) statement -> RUN_ON expression COMMA expression COMMA . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . MINUS expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . NUMBER
    (18) expression -> . NAME

    MINUS           shift and go to state 8
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    NAME            shift and go to state 17

    expression                     shift and go to state 39

state 38

    (10) statement -> MIN expression COMMA expression COMMA expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 10 (statement -> MIN expression COMMA expression COMMA expression .)
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15


state 39

    (14) statement -> RUN_ON expression COMMA expression COMMA expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 14 (statement -> RUN_ON expression COMMA expression COMMA expression .)
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    TIMES           shift and go to state 14
    DIVIDE          shift and go to state 15

